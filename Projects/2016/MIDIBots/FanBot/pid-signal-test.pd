#N canvas 3 49 1194 1520 10;
#X text 111 20 PID control (using signals) in Pure Data \, CME 2016-08-12
;
#X text 139 54 I remember trying this before with messages to create
a position controller for a Lego servo motor. It was pretty sluggish
\, though.;
#X text 552 526 Fan model (PWM control in \, speed out):;
#X obj 541 552 +~;
#X obj 541 574 clip~ 0 1;
#X obj 638 810 snapshot~;
#X obj 638 756 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 638 776 metro 100;
#X floatatom 638 832 8 0 0 0 - - -, f 8;
#X obj 610 748 vsl 15 128 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 4181 1;
#X text 624 577 <- Limit to real range of speeds;
#X text 631 683 <- Make laggy (~10 s to reach full speed);
#X obj 542 680 lop~ 0.1;
#X obj 606 711 s~ test-speed;
#X text 726 197 Hmm \, why not try actually generating a PWM signal?
Just to see what's involved. :);
#X floatatom 790 339 8 0 0 0 PWM_frequency - -, f 8;
#X obj 790 406 phasor~;
#X obj 922 385 sig~;
#X obj 789 432 expr~ $v1 < $v2;
#X obj 842 459 tabsend~ scope;
#N canvas 0 50 450 250 (subpatch) 0;
#X array scope 64 float 3;
#A 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1;
#X coords 0 1 64 -1 200 140 1;
#X restore 952 505 graph;
#X obj 922 363 clip 0 1;
#X obj 989 346 vsl 15 128 0 1 0 0 empty empty PWM_duty 0 -9 0 10 -262144
-1 -1 12700 1;
#X obj 789 482 dac~;
#X obj 789 459 *~ 0.1;
#X obj 482 1442 delwrite~ control 500;
#X obj 540 330 delread~ control;
#X text 37 973 Compute error:;
#X obj 136 373 vsl 15 128 0 1 0 0 empty empty Target 0 -9 0 10 -262144
-1 -1 4200 1;
#X floatatom 136 509 5 0 0 0 - - -, f 5;
#X obj 136 528 sig~;
#X obj 152 972 -~;
#X obj 71 1093 snapshot~;
#X obj 75 1037 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 75 1057 metro 100;
#X floatatom 71 1115 5 0 0 0 - - -, f 5;
#X obj 49 1119 vsl 15 128 -1 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 6359 1;
#X floatatom 182 1039 8 0 0 0 Kp - -, f 8;
#X obj 182 1058 sig~;
#X obj 148 1088 *~;
#X obj 182 993 loadbang;
#X obj 428 432 snapshot~;
#X obj 432 376 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 432 396 metro 100;
#X floatatom 428 454 5 0 0 0 - - -, f 5;
#X obj 406 458 vsl 15 128 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 1894 1;
#X text 107 931 Proportional element:;
#X obj 481 1399 +~;
#X text 511 1400 <- Combine P \, I \, and D components;
#X obj 445 1063 snapshot~;
#X obj 445 1009 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 445 1029 metro 100;
#X floatatom 445 1085 8 0 0 0 - - -, f 8;
#X obj 372 1005 vsl 15 128 -1 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X text 363 864 Integral element:;
#X obj 537 1047 lop~ 0.1;
#X text 501 968 Cumulative error (LPF?);
#X text 351 918 Compute error:;
#X obj 456 918 -~;
#X msg 491 934 clear;
#X text 645 984 TODO: deadband?;
#X obj 441 1293 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 423 1315 *~;
#X obj 680 1006 loadbang;
#X floatatom 680 1050 8 0 0 0 Ki - -, f 8;
#X obj 680 1069 sig~;
#X obj 648 1093 *~;
#X obj 491 1293 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 473 1315 *~;
#X obj 445 1125 rpole~ 1.00001;
#X obj 467 991 fexpr~ $x1 + $y[-1];
#X text 970 939 Derivative element:;
#X obj 1070 1016 loadbang;
#X floatatom 1070 1060 8 0 0 0 Ki - -, f 8;
#X obj 1070 1079 sig~;
#X obj 1038 1103 *~;
#X obj 541 1293 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 523 1315 *~;
#X obj 1040 963 -~;
#X obj 939 1066 snapshot~;
#X obj 939 1012 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 939 1032 metro 100;
#X floatatom 939 1088 8 0 0 0 - - -, f 8;
#X obj 911 1004 vsl 15 128 -1 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 6458 1;
#X obj 1039 987 fexpr~ $x1 - $y[-1];
#X obj 230 1399 snapshot~;
#X obj 230 1345 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 230 1365 metro 100;
#X floatatom 230 1421 8 0 0 0 - - -, f 8;
#X obj 202 1337 vsl 15 128 -1 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 6350 1;
#X obj 108 1401 snapshot~;
#X obj 108 1347 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 108 1367 metro 100;
#X floatatom 108 1423 8 0 0 0 - - -, f 8;
#X obj 80 1339 vsl 15 128 -1 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 7297 1;
#X obj 348 1394 snapshot~;
#X obj 348 1340 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
1 1;
#X obj 348 1360 metro 100;
#X floatatom 348 1416 8 0 0 0 - - -, f 8;
#X obj 320 1332 vsl 15 128 -1 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 6350 1;
#X msg 1070 1038 200;
#X msg 182 1015 100;
#X msg 680 1028 5e-05;
#X text 390 307 Control signal from PID error analysis:;
#X obj 541 617 pow~ 0.2;
#X text 605 624 <- For testing: nonlinearity and scaling;
#X obj 1037 1137 lop~ 10;
#X text 1045 1161 LPF for less twitch?;
#X obj 541 639 *~ 0.2;
#X text 622 641 NOTE: these will probably require K adjs;
#X obj 497 635 +~;
#X obj 461 482 vsl 15 128 -0.5 0.5 0 0 empty empty Perturbation 0 -9
0 10 -262144 -1 -1 7200 1;
#X obj 461 618 sig~;
#X obj 293 484 vsl 15 128 0 2 0 0 empty empty Plant_Scaling 0 -9 0
10 -262144 -1 -1 11100 1;
#X obj 293 620 sig~;
#X obj 329 637 *~;
#X floatatom 248 628 5 0 0 0 - - -, f 5;
#X obj 262 440 loadbang;
#X msg 262 462 1;
#X obj 892 342 clip~ 0 1;
#X floatatom 419 618 5 0 0 0 - - -, f 5;
#X obj 928 792 snapshot~;
#X obj 928 738 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 928 758 metro 100;
#X floatatom 928 814 8 0 0 0 - - -, f 8;
#X obj 900 730 vsl 15 128 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 12699 1;
#X obj 891 407 lop~ 10;
#X obj 987 701 lop~ 5;
#X obj 790 294 loadbang;
#X msg 790 316 1000;
#X connect 3 0 4 0;
#X connect 4 0 115 1;
#X connect 5 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 12 0 5 0;
#X connect 12 0 13 0;
#X connect 12 0 31 1;
#X connect 12 0 58 1;
#X connect 12 0 78 1;
#X connect 15 0 16 0;
#X connect 16 0 18 0;
#X connect 17 0 126 0;
#X connect 18 0 19 0;
#X connect 18 0 24 0;
#X connect 18 0 127 0;
#X connect 21 0 17 0;
#X connect 22 0 21 0;
#X connect 24 0 23 0;
#X connect 26 0 41 0;
#X connect 26 0 3 0;
#X connect 26 0 119 0;
#X connect 28 0 29 0;
#X connect 29 0 30 0;
#X connect 30 0 31 0;
#X connect 30 0 58 0;
#X connect 30 0 78 0;
#X connect 31 0 32 0;
#X connect 31 0 39 0;
#X connect 32 0 35 0;
#X connect 32 0 36 0;
#X connect 33 0 34 0;
#X connect 34 0 32 0;
#X connect 37 0 38 0;
#X connect 38 0 39 1;
#X connect 39 0 62 0;
#X connect 40 0 101 0;
#X connect 41 0 44 0;
#X connect 41 0 45 0;
#X connect 42 0 43 0;
#X connect 43 0 41 0;
#X connect 47 0 25 0;
#X connect 49 0 52 0;
#X connect 49 0 53 0;
#X connect 50 0 51 0;
#X connect 51 0 49 0;
#X connect 55 0 66 0;
#X connect 58 0 70 0;
#X connect 58 0 55 0;
#X connect 59 0 70 0;
#X connect 61 0 62 1;
#X connect 62 0 47 0;
#X connect 62 0 90 0;
#X connect 63 0 102 0;
#X connect 64 0 65 0;
#X connect 65 0 66 1;
#X connect 66 0 68 0;
#X connect 67 0 68 1;
#X connect 68 0 47 0;
#X connect 68 0 85 0;
#X connect 70 0 49 0;
#X connect 72 0 100 0;
#X connect 73 0 74 0;
#X connect 74 0 75 1;
#X connect 75 0 106 0;
#X connect 76 0 77 1;
#X connect 77 0 47 0;
#X connect 77 0 95 0;
#X connect 78 0 84 0;
#X connect 79 0 82 0;
#X connect 79 0 83 0;
#X connect 80 0 81 0;
#X connect 81 0 79 0;
#X connect 84 0 75 0;
#X connect 84 0 79 0;
#X connect 85 0 88 0;
#X connect 85 0 89 0;
#X connect 86 0 87 0;
#X connect 87 0 85 0;
#X connect 90 0 93 0;
#X connect 90 0 94 0;
#X connect 91 0 92 0;
#X connect 92 0 90 0;
#X connect 95 0 98 0;
#X connect 95 0 99 0;
#X connect 96 0 97 0;
#X connect 97 0 95 0;
#X connect 100 0 73 0;
#X connect 101 0 37 0;
#X connect 102 0 64 0;
#X connect 104 0 108 0;
#X connect 106 0 77 0;
#X connect 110 0 12 0;
#X connect 111 0 112 0;
#X connect 111 0 120 0;
#X connect 112 0 110 0;
#X connect 113 0 114 0;
#X connect 113 0 116 0;
#X connect 114 0 115 0;
#X connect 115 0 110 1;
#X connect 117 0 118 0;
#X connect 118 0 113 0;
#X connect 119 0 126 0;
#X connect 121 0 124 0;
#X connect 121 0 125 0;
#X connect 122 0 123 0;
#X connect 123 0 121 0;
#X connect 126 0 18 1;
#X connect 127 0 121 0;
#X connect 128 0 129 0;
#X connect 129 0 15 0;
